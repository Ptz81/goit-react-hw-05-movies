{"version":3,"file":"static/js/532.dadcffc3.chunk.js","mappings":"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","sources":["Service/Api.jsx","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","pages/Movies/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const instance = axios.create({\n  method: 'GET',\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c91e59fa560fc5d9b1a82432410ac72e',\n    language: 'en-US',\n    SEARCH: 'search',\n    PATH: 'movie',\n  },\n});\n\nexport async function getTrendMovies() {\n  const routeWay = '/trending/movie/week';\n  try {\n    const { data } = await instance.get(routeWay);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\n// export async function searchMovie(request) {\n//   try {\n//     const { data } = await axios(`${instance.params.PATH}/${instance.params.SEARCH}`, {\n//       params: {\n//         language: 'en-US',\n//         query: request,\n//         include_adult: false,\n//       },\n//     });\n\n//     return data.results;\n//   } catch (e) {\n//     console.error(e);\n//   }\n// }\n// export async function searchMovie(request) {\n//   try {\n//     const { data } = await axios(`${instance.defaults.baseURL}/search/movie`, {\n//       params: {\n//         api_key: instance.defaults.params.api_key,\n//         language: instance.defaults.params.language,\n//         query: request,\n//         include_adult: false,\n//       },\n//     });\n\n//     return data.results;\n//   } catch (e) {\n//     console.error(e);\n//     throw e;\n//   }\n// }\nexport async function searchMovie(request) {\n  try {\n    const { data } = await instance.get(\"/search/movie\", {\n      params: {\n        query: request,\n        include_adult: false,\n      },\n    });\n\n    return data.results;\n  } catch (e) {\n    console.error(e);\n    throw e;\n  }\n}\n\n\nexport async function getRequestedMovie(request, movieId) {\n  const routeWay = `/movie/${movieId}${request}`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  const routeWay = `/movie/${movieId}`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const routeWay = `/movie/${movieId}/credits`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\n\nexport async function getMovieReview(movieId) {\n  const routeWay = `/movie/${movieId}/reviews`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item_img\":\"Cast_item_img__7Q7en\",\"list_item\":\"Cast_list_item__Fn+lK\",\"item\":\"Cast_item__a0CDL\",\"spare_img\":\"Cast_spare_img__nO0mw\",\"item_name\":\"Cast_item_name__Fiq4A\",\"item_character\":\"Cast_item_character__IpgeI\"};","import { getMovieCredits } from '../../Service/Api';\nimport spareIMG from '../../components/img/spareIMG.png';\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport css from './Cast.module.css'\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500/';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCredits( movieId)\n      .then(data => setCast(data.cast || []));\n  }, [movieId]);\n\n  return (\n    <ul className={css.list_item}>\n      {cast.map(actor => (\n        <li key={actor.id} className={css.item}>\n          {actor.profile_path ? (\n            <img className={css.item_img} src={IMAGE_URL + actor.profile_path} alt={actor.name} />\n          ) : (\n            <img className={css.spare_img} src={spareIMG} alt={actor.name} />\n          )}\n          <p className={css.item_name}>{actor.name}</p>\n          <p className={css.item_character}>Character: {actor.character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"list_item\":\"Reviews_list_item__9lxTg\",\"item\":\"Reviews_item__DJKij\",\"item_title\":\"Reviews_item_title__UH3Op\",\"item_text\":\"Reviews_item_text__Kl15Q\"};","import { getMovieReview } from '../../Service/Api';\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport css from './Reviews.module.css'\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieReview(movieId)\n      .then(data => setReviews(data.results || []));\n  }, [movieId]);\n  return (\n    <ul className={css.list_item}>\n      {reviews.length > 0 ? (\n        reviews.map(review => (\n          <li key={review.id} className={css.item}>\n            <h3 className={css.item_title}>{review.author}</h3>\n            <p className={css.item_text}>{review.content}</p>\n          </li>\n        ))\n      ) : (\n        <p>No reviews found</p>\n      )}\n    </ul>\n  );\n}\nexport default Reviews;\n","import React, { Suspense, useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate, Route, useParams, Routes } from \"react-router-dom\";\nimport { getRequestedMovie } from '../../Service/Api';\nimport Loading from '../../components/Loading/Loading'\n\nimport Cast from '../../components/Cast/Cast';\nimport Reviews from '../../components/Reviews/Reviews';\nimport css from '../../components/App.module.css';\nimport spareIMG from '../../components/img/spareIMG.png';\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500/';\n\nconst MoviesDetails = () => {\n//стан компоненту\n  const [film, setFilm] = useState([]);\n  //доступ до рядка та його властивостей\n  const locationDetails = useLocation();\n  //доступ до ід у рядку\n  const { movieId } = useParams();\n  //навігація по сайту\n  const navigate = useNavigate();\n\n  //виконання ефекту при зміні залежності movieId\n  useEffect(() => {\n    //Ця функція виконує запит на фільми, отримує дані\n    //та встановлює їх в стан компонента за допомогою функції setFilm.\n    const fetchFilmData = async () => {\n      try {\n        const movieData = await getRequestedMovie(null, movieId);\n        setFilm(movieData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchFilmData();\n    //залежність ефекту від зміни значення movieId\n  }, [movieId]);\n\n//перевіряє наявність деяких властивостей в locationDetails та виконує навігацію на відповідний шлях.\n  const handleClick = () => {\n    navigate(locationDetails?.state?.from?.pathname ? `${locationDetails.state?.from?.pathname}${locationDetails.state?.from?.search}`\n        : '/',);\n  };\n\n  const { title, overview, vote_average, poster_path, genres } = film;\n\n  const image = poster_path ? `${IMAGE_URL}/${film.poster_path}` : spareIMG;\n  const userScore = Math.round((Number(vote_average) * 100) / 10);\n  const movieGenres = genres && genres.map(genre => genre.name).join(' ');\n\n  return (\n    <>\n      {film && (\n        <>\n            <button className=\"btn btn-success m-2\" onClick={handleClick}>\n        {locationDetails?.state?.label || 'Go Back'}\n      </button>\n      <div className={css.box}>\n        <img src={image} alt={title} />\n\n        <div className={css.description}>\n          <h2>{title}</h2>\n          <p>User Score: {userScore}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n              <p>{movieGenres}</p>\n\n\n          <div className={css.addInfo}>\n            <h5>Additional information</h5>\n            <ul className={css.link}>\n              <li>\n                    <Link\n                      to={`cast`}\n                  state={{\n                    from: locationDetails.state.from,\n                    label: locationDetails.state.label,\n                  }}\n                  className={css.link_title}\n                >\n                  Cast\n                </Link>\n              </li>\n\n              <li>\n                <Link\n                      to={`reviews`}\n                  state={{\n                    from: locationDetails.state.from,\n                    label: locationDetails.state.label,\n                  }}\n                  className={css.link_title}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n          </div>\n\n        <Suspense fallback={<Loading />}>\n            <Routes>\n              <Route path=\"/cast\" element={<Cast/>} />\n              <Route path=\"/reviews\" element={<Reviews/>} />\n            </Routes>\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["instance","axios","method","baseURL","params","api_key","language","SEARCH","PATH","getTrendMovies","get","data","results","console","error","searchMovie","request","query","include_adult","getRequestedMovie","movieId","routeWay","getMovieCredits","getMovieReview","useState","cast","setCast","useParams","useEffect","then","className","css","map","actor","profile_path","src","alt","name","spareIMG","character","id","reviews","setReviews","length","review","author","content","film","setFilm","locationDetails","useLocation","navigate","useNavigate","fetchFilmData","movieData","log","title","overview","vote_average","poster_path","genres","image","userScore","Math","round","Number","movieGenres","genre","join","onClick","state","from","pathname","search","label","to","Suspense","fallback","Loading","path","element"],"sourceRoot":""}