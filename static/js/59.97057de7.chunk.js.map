{"version":3,"file":"static/js/59.97057de7.chunk.js","mappings":"qSAEaA,E,OAAWC,EAAAA,OAAa,CACnCC,OAAQ,MACRC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,QACVC,OAAQ,SACRC,KAAM,WAIH,SAAeC,IAAtB,+B,aAAO,O,oBAAA,4FACY,uBADZ,kBAGoBT,EAASU,IAFjB,wBADZ,uBAGKC,EAHL,EAGKA,KAHL,kBAIIA,EAAKC,SAJT,sCAMHC,QAAQC,MAAR,MANG,qFA2CA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kGAEoBhB,EAASU,IAAI,gBAAiB,CACnDN,OAAQ,CACNa,MAAOD,EACPE,eAAe,KALhB,uBAEKP,EAFL,EAEKA,KAFL,kBASIA,EAAKC,SATT,sCAWHC,QAAQC,MAAR,MAXG,qFAiBA,SAAeK,EAAtB,iDAAO,OAAP,oBAAO,WAAiCH,EAASI,GAA1C,kFACCC,EADD,iBACsBD,GADtB,OACgCJ,GADhC,kBAGoBhB,EAASU,IAAIW,GAHjC,uBAGKV,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,sCAMHE,QAAQC,MAAR,MANG,qFAsBA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,kFACCC,EADD,iBACsBD,EADtB,8BAGoBpB,EAASU,IAAIW,GAHjC,uBAGKV,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,sCAMHE,QAAQC,MAAR,MANG,qFAYA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,kFACCC,EADD,iBACsBD,EADtB,8BAGoBpB,EAASU,IAAIW,GAHjC,uBAGKV,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,sCAMHE,QAAQC,MAAR,MANG,qF,iGC1GP,EAAuB,qB,SCgCvB,EA9BkB,SAAC,GAAoB,IAAlBU,EAAiB,EAAjBA,WACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,kBAAMC,UAAWC,EAAUC,KAAK,SAASC,SANtB,SAACC,GACpBA,EAAEC,iBACFT,EAAWE,EACZ,EAGC,WACE,kBACEE,UAAU,oBAEVM,KAAK,SACLC,YAAY,aACZ,aAAW,SACXC,SAjBe,SAACJ,GACpBL,EAASK,EAAEK,OAAOX,MACnB,EAgBKA,MAAOA,KAET,mBAAQE,UAAU,0BAA0BM,KAAK,SAAjD,sBAKL,E,4CCMD,EAjCoB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACrB,GAA4Bb,EAAAA,EAAAA,UAAS,IAArC,eAAOc,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAejB,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gGAESL,EAFT,kEAKuBvB,EAAAA,EAAAA,IAAYuB,GALnC,OAKU3B,EALV,OAMI6B,EAAU7B,GANd,gDAQIE,QAAQC,MAAR,MARJ,0DADc,uBAAC,WAAD,wBAYd8B,EACD,GAAE,CAACN,KAEF,wBACGC,GACCA,EAAOM,KAAI,SAAAC,GAAK,OACd,yBACE,SAAC,KAAD,CACEC,GAAE,UAAKD,EAAME,IACbC,MAAO,CAAEC,KAAMT,EAAUU,MAAO,gBAFlC,SAIGL,EAAMM,SALFN,EAAME,GADD,KAYvB,ECMD,EAjBc,WACZ,IAAQV,GAAWe,EAAAA,EAAAA,MAAXf,OACR,GAAwCb,EAAAA,EAAAA,UAASa,GAAjD,eAAOgB,EAAP,KAAqBC,EAArB,KAMA,OACE,iCACE,SAAC,EAAD,CAAW/B,WANU,SAACE,GACxB6B,EAAgB7B,EACjB,KAKG,SAAC,EAAD,CAAaY,OAAQgB,MAI1B,C","sources":["Service/Api.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/MovieForm.jsx","pages/Movies/MovieSearch.jsx","pages/Movies/Movie.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const instance = axios.create({\n  method: 'GET',\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c91e59fa560fc5d9b1a82432410ac72e',\n    language: 'en-US',\n    SEARCH: 'search',\n    PATH: 'movie',\n  },\n});\n\nexport async function getTrendMovies() {\n  const routeWay = '/trending/movie/week';\n  try {\n    const { data } = await instance.get(routeWay);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\n// export async function searchMovie(request) {\n//   try {\n//     const { data } = await axios(`${instance.params.PATH}/${instance.params.SEARCH}`, {\n//       params: {\n//         language: 'en-US',\n//         query: request,\n//         include_adult: false,\n//       },\n//     });\n\n//     return data.results;\n//   } catch (e) {\n//     console.error(e);\n//   }\n// }\n// export async function searchMovie(request) {\n//   try {\n//     const { data } = await axios(`${instance.defaults.baseURL}/search/movie`, {\n//       params: {\n//         api_key: instance.defaults.params.api_key,\n//         language: instance.defaults.params.language,\n//         query: request,\n//         include_adult: false,\n//       },\n//     });\n\n//     return data.results;\n//   } catch (e) {\n//     console.error(e);\n//     throw e;\n//   }\n// }\nexport async function searchMovie(request) {\n  try {\n    const { data } = await instance.get(\"/search/movie\", {\n      params: {\n        query: request,\n        include_adult: false,\n      },\n    });\n\n    return data.results;\n  } catch (e) {\n    console.error(e);\n    throw e;\n  }\n}\n\n\nexport async function getRequestedMovie(request, movieId) {\n  const routeWay = `/movie/${movieId}${request}`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  const routeWay = `/movie/${movieId}`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const routeWay = `/movie/${movieId}/credits`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\n\nexport async function getMovieReview(movieId) {\n  const routeWay = `/movie/${movieId}/reviews`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\"};","import React, { useState } from \"react\";\nimport css from './Movies.module.css'\n\nconst MovieForm = ({ formSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    formSubmit(value);\n  };\n// 'd-flex mt-2'\n  return (\n    <form className={css.form} role='search' onSubmit={handleSubmit}>\n      <input\n        className='form-control me-2'\n\n        type='search'\n        placeholder='Type movie'\n        aria-label='Search'\n        onChange={handleChange}\n        value={value}\n      />\n      <button className='btn btn-outline-success' type='submit'>\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default MovieForm;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { searchMovie } from '../../Service/Api';\n\nconst MovieSearch = ({ search }) => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    async function getSearchData() {\n      try {\n        if (!search) {\n          return;\n        }\n        const data = await searchMovie(search);\n        setMovies(data);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    getSearchData();\n  }, [search]);\n  return (\n    <ul>\n      {movies &&\n        movies.map(movie => (\n          <li key={movie.id}>\n            <Link\n              to={`${movie.id}`}\n              state={{ from: location, label: 'Go to Search' }}\n            >\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\nexport default MovieSearch;\n","// import { useParams } from \"react-router-dom\";\n// import MovieForm from './MovieForm';\n// import Moviesearch from './MovieSearch';\n\n// const Movie = () => {\n//   // const [searchParams, setSearchParams] = useParams();\n//   // const search = searchParams.get('search');\n//   const { search } = useParams();\n\n\n//   return (\n//     <>\n//       <Moviesearch formSubmit={search => setSearchParams({ search })} search={search} />\n//       <MovieForm search={search}/>\n//     </>\n\n//   )\n// }\n\n// export default Movie;\nimport { useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport MovieForm from './MovieForm';\nimport Moviesearch from './MovieSearch';\n\nconst Movie = () => {\n  const { search } = useParams();\n  const [searchParams, setSearchParams] = useState(search);\n\n  const handleFormSubmit = (value) => {\n    setSearchParams(value);\n  };\n\n  return (\n    <>\n      <MovieForm formSubmit={handleFormSubmit} />\n      <Moviesearch search={searchParams} />\n    </>\n\n  )\n}\n\nexport default Movie;\n"],"names":["instance","axios","method","baseURL","params","api_key","language","SEARCH","PATH","getTrendMovies","get","data","results","console","error","searchMovie","request","query","include_adult","getRequestedMovie","movieId","routeWay","getMovieCredits","getMovieReview","formSubmit","useState","value","setValue","className","css","role","onSubmit","e","preventDefault","type","placeholder","onChange","target","search","movies","setMovies","location","useLocation","useEffect","getSearchData","map","movie","to","id","state","from","label","title","useParams","searchParams","setSearchParams"],"sourceRoot":""}