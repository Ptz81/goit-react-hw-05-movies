{"version":3,"file":"static/js/59.2cc70eed.chunk.js","mappings":"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","sources":["Service/Api.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/MovieForm.jsx","pages/Movies/MovieSearch.jsx","pages/Movies/Movie.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const instance = axios.create({\n  method: 'GET',\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c91e59fa560fc5d9b1a82432410ac72e',\n    language: 'en-US',\n    SEARCH: 'search',\n    PATH: 'movie',\n  },\n});\n\nexport async function getTrendMovies() {\n  const routeWay = '/trending/movie/week';\n  try {\n    const { data } = await instance.get(routeWay);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function searchMovie(request) {\n  try {\n    const { data } = await instance.get(\"/search/movie\", {\n      params: {\n        query: request,\n        include_adult: false,\n      },\n    });\n\n    return data.results;\n  } catch (e) {\n    console.error(e);\n    throw e;\n  }\n}\n\n\nexport async function getRequestedMovie(request, movieId) {\n  const routeWay = `/movie/${movieId}${request}`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  const routeWay = `/movie/${movieId}`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const routeWay = `/movie/${movieId}/credits`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\n\nexport async function getMovieReview(movieId) {\n  const routeWay = `/movie/${movieId}/reviews`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\",\"emptySearchMessage\":\"Movies_emptySearchMessage__N49+h\"};","import React, { useState, useEffect } from \"react\";\nimport css from './Movies.module.css';\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\n\nconst MovieForm = ({ formSubmit, search }) => {\n  //Початкове значення стану search (значення пошуку). якщо search є null або undefined, то використовується пустий рядок ''.\n  const [value, setValue] = useState(search || '');\n  //навігація по сторінках\n  const navigate = useNavigate();\n  //доступ до параметрів запиту URL і можливість змінювати їх.\n  const [, setSearchParams] = useSearchParams();\n// синхронізація поля вводу і параметром запиту URL\n  useEffect(() => {\n    if (search !== value) {\n      setValue(search || '');\n    }\n  }, [value, search]);\n//функція зміни значення у полі вводу\n  const handleChange = (e) => {\n    //Зчитується нове значення поля вводу, яке було введено користувачем.\n    const newValue = e.target.value;\n    //оновлення стану\n    setValue(newValue);\n    //оновлення параметра запиту URL - відбудеться синхронізація між значенням поля вводу і параметром запиту URL.\n    setSearchParams({ search: newValue });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    formSubmit(value);\n  };\n\n  const handleClear = () => {\n    setValue('');\n    setSearchParams({ search: '' });\n    navigate('/');\n  };\n\n  return (\n    <div>\n      <form className={css.form} role='search' onSubmit={handleSubmit}>\n        <input\n          className='form-control me-2'\n          type='search'\n          placeholder={search ? 'start searching the movie...' : ''}\n          aria-label='Search'\n          onChange={handleChange}\n          value={value}\n        />\n        <button className='btn btn-outline-success' type='submit'>\n          Search\n        </button>\n        {search && (\n          <button className='btn btn-outline-danger' type='button' onClick={handleClear}>\n            Clear\n          </button>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default MovieForm;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { searchMovie } from '../../Service/Api';\n\nconst MovieSearch = ({ search }) => {  const [movies, setMovies] = useState(null);\n  const location = useLocation();\n  useEffect(() => {\n    async function getSearchData() {\n      try {\n        if (!search) {\n          return;\n        }\n        const data = await searchMovie(search);\n        setMovies(data);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    getSearchData();\n  }, [search]);\n  return (\n    <ul>\n      {movies &&\n        movies.map(movie => (\n          <li key={movie.id}>\n            <Link\n              to={`${movie.id}`}\n              state={{ from: location, label: 'Go to Search' }}\n            >\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\nexport default MovieSearch;\n","import { useSearchParams } from \"react-router-dom\";\nimport MovieForm from './MovieForm';\nimport Moviesearch from './MovieSearch';\n\nconst Movie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  const handleFormSubmit = (search) => {\n    setSearchParams({ search });\n  };\n  return (\n    <>\n      <MovieForm formSubmit={handleFormSubmit} search={search} />\n      <Moviesearch search={search} />\n    </>\n  );\n}\nexport default Movie;\n\n"],"names":["instance","axios","method","baseURL","params","api_key","language","SEARCH","PATH","getTrendMovies","get","data","results","console","error","searchMovie","request","query","include_adult","getRequestedMovie","movieId","routeWay","getMovieCredits","getMovieReview","formSubmit","search","useState","value","setValue","navigate","useNavigate","useSearchParams","setSearchParams","useEffect","className","css","role","onSubmit","e","preventDefault","type","placeholder","onChange","newValue","target","onClick","movies","setMovies","location","useLocation","getSearchData","map","movie","to","id","state","from","label","title","searchParams"],"sourceRoot":""}