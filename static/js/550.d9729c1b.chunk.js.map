{"version":3,"file":"static/js/550.d9729c1b.chunk.js","mappings":"8PAEaA,E,OAAWC,EAAAA,OAAa,CACnCC,OAAQ,MACRC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,4FACY,uBADZ,kBAGoBP,EAASQ,IAFjB,wBADZ,uBAGKC,EAHL,EAGKA,KAHL,kBAIIA,EAAKC,SAJT,sCAMHC,QAAQC,MAAR,MANG,qFAsBA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kFACCC,EADD,iBACsBD,GADtB,kBAGoBd,EAASQ,IAAIO,GAHjC,uBAGKN,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,sCAMHE,QAAQC,MAAR,MANG,qF,mPC6IP,EA3DsB,WAAO,IAAD,EAC1B,GAAwBI,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQJ,GAAYK,EAAAA,EAAAA,MAAZL,QACFM,GAAkBC,EAAAA,EAAAA,MAClBC,GAAWC,EAAAA,EAAAA,MAkBjB,IAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,8GAEMZ,EAAAA,EAAAA,IAAgBC,GAFtB,OAEZY,EAFY,OAGlBR,EAAQQ,GAHU,gDAKlBf,QAAQgB,IAAR,MALkB,yDAAH,qDAQnBF,GACD,GAAE,CAACX,KAECG,EACH,OAAO,sCAGT,IAAQW,EAAuDX,EAAvDW,MAAOC,EAAgDZ,EAAhDY,SAAUC,EAAsCb,EAAtCa,aAAcC,EAAwBd,EAAxBc,YAAaC,EAAWf,EAAXe,OAE9CC,EAAQF,EA9BE,mCA8BwBA,E,ynFAClCG,EAAYC,KAAKC,MAA8B,IAAvBC,OAAOP,GAAuB,IACtDQ,EAAcN,GAAUA,EAAOO,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAEnE,OACE,iCACE,mBAAQC,UAAU,sBAAsBC,QA5BxB,WAAO,IAAD,EACxBtB,GAAwB,OAAfF,QAAe,IAAfA,GAAA,UAAAA,EAAiByB,aAAjB,eAAwBC,OAAQ,IAC1C,EA0BG,UACkB,OAAf1B,QAAe,IAAfA,GAAA,UAAAA,EAAiByB,aAAjB,eAAwBE,QAAS,aAEpC,iBAAKJ,UAAWK,EAAAA,EAAAA,IAAhB,WACE,gBAAKC,IAAKhB,EAAOiB,IAAKtB,KAEtB,iBAAKe,UAAWK,EAAAA,EAAAA,YAAhB,WACE,wBAAKpB,KACL,wCAAgBM,EAAhB,QACA,sCACA,uBAAIL,KACJ,oCACA,uBAAIS,KACJ,UAAC,KAAD,YACE,SAAC,KAAD,CAAOa,KAAK,wBAAwBC,SAAS,SAAC,IAAD,OAC7C,SAAC,KAAD,CAAOD,KAAK,2BAA2BC,SAAS,SAAC,IAAD,UAElD,SAAC,KAAD,CAAMC,GAAE,kBAAavC,EAAb,SAAR,mBACA,SAAC,KAAD,CAAMuC,GAAE,kBAAavC,EAAb,YAAR,6BAKT,C","sources":["Service/Api.jsx","pages/Movies/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const instance = axios.create({\n  method: 'GET',\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c91e59fa560fc5d9b1a82432410ac72e',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendMovies() {\n  const routeWay = '/trending/movie/week';\n  try {\n    const { data } = await instance.get(routeWay);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getRequestedMovie(movieId) {\n  const routeWay = `/movie/${movieId}`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  const routeWay = `/movie/${movieId}`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const routeWay = `/movie/${movieId}/credits`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function getMovieReview(movieId) {\n  const routeWay = `/movie/${movieId}/reviews`;\n  try {\n    const { data } = await instance.get(routeWay);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n","// import { useEffect, useState, Suspense } from \"react\";\n// import { Link, useLocation, useNavigate, useParams, Routes, Route } from \"react-router-dom\";\n// import { getMovieDetails } from '../../Service/Api';\n\n// import Cast from '../../components/Cast/Cast';\n// import Reviews from '../../components/Reviews/Reviews';\n// import css from '../../components/App.module.css';\n// import spareIMG from '../../components/img/spareIMG.png';\n\n// const IMAGEERR = 'https://image.tmdb.org/t/p/w500/';\n\n// const MoviesDetails = () => {\n//   const [film, setFilm] = useState(null);\n//   const { movieId } = useParams();\n//   const movies = JSON.parse(localStorage.getItem('movie'));\n//   const movie = movies && movies.find(elem => elem.id === movieId);\n//   const locationDetails = useLocation();\n//   const navigate = useNavigate();\n//   const handleClick = () => {\n//     navigate(locationDetails?.state?.from || '/');\n//   };\n\n//   useEffect(() => {\n//     const fetchFilmData = async () => {\n//       try {\n//         const movieData = await getMovieDetails(movieId);\n//         setFilm(movieData);\n//       } catch (e) {\n//         console.log(e);\n//       }\n//     };\n//     fetchFilmData();\n//   }, [movieId]);\n\n//   const { genres, title, overview, vote_average, poster_path } = movie || {};\n\n//   const image = poster_path ? IMAGEERR + poster_path : spareIMG;\n//   const userScore = Math.round((Number(vote_average) * 100) / 10);\n//   const movieGenres = genres && genres.map(genre => genre.name).join('');\n\n//   return (\n//     <>\n//       {film && (\n//         <>\n//           <button className=\"btn btn-success m2\" onClick={handleClick}>\n//             {locationDetails?.state?.label || 'Go Back'}\n//           </button>\n//           <div className={css.box}>\n//             <img src={image} alt={title} />\n\n//             <div className={css.description}>\n//               <h2>{title}</h2>\n//               <p>User Score: {userScore}%</p>\n//               <h3>Overview</h3>\n//               <p>{overview}</p>\n//               <h4>Genres</h4>\n//               <p>{movieGenres}</p>\n//             </div>\n//           </div>\n\n//           <div className={css.additional}>\n//             <h5>Additional information</h5>\n//             <ul>\n//               <li>\n//                 <Link\n//                   to={`/movies/${movieId}/cast`}\n//                   state={{\n//                     from: locationDetails.state?.from || '/',\n//                     label: locationDetails.state?.label,\n//                   }}\n//                 >\n//                   Cast\n//                 </Link>\n//               </li>\n\n//               <li>\n//                 <Link\n//                   to={`/movies/${movieId}/reviews`}\n//                   state={{\n//                     from: locationDetails.state?.from || '/',\n//                     label: locationDetails.state?.label,\n//                   }}\n//                 >\n//                   Reviews\n//                 </Link>\n//               </li>\n//             </ul>\n//           </div>\n\n//           <Suspense fallback={<p>Loading...</p>}>\n//             <Routes>\n//               <Route path=\"/movies/:movieId/cast\" element={<Cast />} />\n//               <Route path=\"/movies/:movieId/reviews\" element={<Reviews />} />\n//             </Routes>\n//           </Suspense>\n//         </>\n//       )}\n//     </>\n//   );\n// };\n\n// export default MoviesDetails;\n\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate, useParams, Routes, Route } from \"react-router-dom\";\nimport { getMovieDetails } from '../../Service/Api';\n\nimport Cast from '../../components/Cast/Cast';\nimport Reviews from '../../components/Reviews/Reviews';\nimport css from '../../components/App.module.css';\nimport spareIMG from '../../components/img/spareIMG.png';\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500/';\n\nconst MoviesDetails = () => {\n  const [film, setFilm] = useState(null);\n  const { movieId } = useParams();\n  const locationDetails = useLocation();\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate(locationDetails?.state?.from || '/');\n  };\n\n  useEffect(() => {\n    const fetchFilmData = async () => {\n      try {\n        const movieData = await getMovieDetails(movieId);\n        setFilm(movieData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchFilmData();\n  }, [movieId]);\n\n  if (!film) {\n    return <p>Loading...</p>;\n  }\n\n  const { title, overview, vote_average, poster_path, genres } = film;\n\n  const image = poster_path ? IMAGE_URL + poster_path : spareIMG;\n  const userScore = Math.round((Number(vote_average) * 100) / 10);\n  const movieGenres = genres && genres.map(genre => genre.name).join(', ');\n\n  return (\n    <>\n      <button className=\"btn btn-success m-2\" onClick={handleClick}>\n        {locationDetails?.state?.label || 'Go Back'}\n      </button>\n      <div className={css.box}>\n        <img src={image} alt={title} />\n\n        <div className={css.description}>\n          <h2>{title}</h2>\n          <p>User Score: {userScore}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p>{movieGenres}</p>\n          <Routes>\n            <Route path=\"/movies/:movieId/cast\" element={<Cast />} />\n            <Route path=\"/movies/:movieId/reviews\" element={<Reviews />} />\n          </Routes>\n          <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["instance","axios","method","baseURL","params","api_key","language","getTrendMovies","get","data","results","console","error","getMovieDetails","movieId","routeWay","useState","film","setFilm","useParams","locationDetails","useLocation","navigate","useNavigate","useEffect","fetchFilmData","movieData","log","title","overview","vote_average","poster_path","genres","image","userScore","Math","round","Number","movieGenres","map","genre","name","join","className","onClick","state","from","label","css","src","alt","path","element","to"],"sourceRoot":""}